version: '3'

services:

  database:
    image: mysql:latest
    container_name: ${APP_NAME}_database
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - db_data:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}

  # docker exec -ti [CONTAINER NAME] sh -c "chown -R www-data:www-data wp-content"
  wordpress:
    image: wordpress:5.4.1
    container_name: ${APP_NAME}_wordpress
    volumes:
      - "./config/conf/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini"
      - wp_data:/var/www/html
      - "./app:/var/www/html/wp-content/themes/pandoramarketing_theme/app:rw"
      - "./wp-content/uploads:/var/www/html/wp-content/uploads:rw"
    ports:
      - 80:80
    restart: always
    environment:
      WORDPRESS_DB_HOST: database:3306
      WORDPRESS_DB_NAME: ${DB_NAME}
      WORDPRESS_DB_USER: ${DB_USER}
      WORDPRESS_DB_PASSWORD: ${DB_PASSWORD}
      WORDPRESS_DEBUG: 1
    depends_on:
      - database

  wp-cli:
    image: wordpress:cli
    container_name: ${APP_NAME}_wp-cli
    user: xfs
    volumes:
      - "./config/conf/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini"
      - wp_data:/var/www/html
    command: "tail -f /dev/null"
    depends_on:
      - database
      - wordpress

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: ${APP_NAME}_phpmyadmin
    volumes:
      - "./config/conf/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini"
    ports:
      - 8080:80
    environment:
      MYSQL_USERNAME: ${MYSQL_USERNAME}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      PMA_HOST: database
    depends_on:
      - database

volumes:
  db_data: {}
  wp_data: {}
